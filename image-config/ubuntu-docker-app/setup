#!/bin/bash
set -e

# user_name="${1:-ubuntu}"

function configure {
  #apt update, install some prerequisites
  apt -y update
  apt -y install ca-certificates curl gnupg gnupg2 lsb-release

  #add docker repo
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

  #add nginx repo
  curl -fsSL https://nginx.org/keys/nginx_signing.key | gpg --dearmor -o /usr/share/keyrings/nginx-archive-keyring.gpg

  echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
  http://nginx.org/packages/ubuntu $(lsb_release -cs) nginx" |
    tee /etc/apt/sources.list.d/nginx.list > /dev/null

  echo -e "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 900\n" |
    tee /etc/apt/preferences.d/99nginx
}

function install {
  #docker, nginx and other stuff
  apt -y update
  apt -y upgrade
  apt -y install \
    docker-ce docker-ce-cli containerd.io \
    nginx \
    tree unzip

  #aws cli
  mkdir ~/Dist
  cd ~/Dist
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  unzip awscliv2.zip
  ./aws/install

  #enable nginx. It should pull and run app image because of systemd WantedBy
  local -r buc="s3://${bucket_name-}/instance-setup-data"
  aws s3 sync "$buc/nginx" "/etc/nginx"
  chown -R '/etc/nginx/pem' nginx:nginx
  chmod -R go-rwx '/etc/nginx/pem'
  local -r sn="docker.${app_name-}.service"
  aws s3 cp "$buc/$sn" "/etc/systemd/system"
  systemctl enable nginx
  systemctl enable "$sn"
}

# function user_setup {
#   usermod -a -G docker "$user_name"
#   mkdir -p "/home/$user_name/scp_inbox"
#   chown -R "$user_name:$user_name" "/home/$user_name/scp_inbox"
#   loginctl enable-linger "$user_name"
# }

configure && install && reboot
